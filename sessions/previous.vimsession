let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <C-Tab> =UltiSnips#ListSnippets()
map! <S-Insert> *
nnoremap  :tabprevious
nnoremap  ?
snoremap <silent>  c
nnoremap  
xnoremap <silent> 	 :call UltiSnips#SaveLastVisualSelection()gvs
snoremap <silent> 	 :call UltiSnips#ExpandSnippet()
nnoremap <NL> <NL>
nnoremap  
nnoremap  
nnoremap  :tabnext
nnoremap  :q
nnoremap  :%s///g<Left><Left>
nnoremap  :wa
nnoremap  :tabnew
nnoremap  :vnew
vmap  "*d
noremap  rt :RunTests
noremap  ot :OpenTests
noremap   :call JumpToNextFunction("/")
nnoremap  lp :LoadSession previous
nnoremap  ss :SaveSession __global__
nnoremap  ll :LoadSession __global__
nnoremap  ev :vspl $MYVIMRC
nnoremap  tc :Tab /,
nnoremap  tp :Tab /|
nnoremap  tv :Tab /Â¦
nnoremap  te :Tab /=
nnoremap  tt :Tab /
nnoremap  ' viwa'hbi'lel
nnoremap  " viwa"hbi"lel
noremap  sv :source $MYVIMRC
noremap ' Gzz
noremap 0 ^
nnoremap : ;
nnoremap ; :
nnoremap Q :normal n.
nnoremap f /
nmap gx <Plug>NetrwBrowseX
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cfile>"),0)
snoremap <silent> <Del> c
snoremap <silent> <BS> c
snoremap <silent> <C-Tab> :call UltiSnips#ListSnippets()
noremap <F4> :call CreateNewFile()
noremap <C-Space> :call JumpToNextFunction("?")
noremap <F3> :call CompileAndRun()
nnoremap <Down> :resize +5
nnoremap <Up> :resize -5
nnoremap <Right> :vertical resize +5
nnoremap <Left> :vertical resize -5
vmap <C-Del> "*d
vmap <S-Del> "*d
vmap <C-Insert> "*y
vmap <S-Insert> "-d"*P
nmap <S-Insert> "*P
inoremap  :tabpreviousi
inoremap <silent> 	 =UltiSnips#ExpandSnippet()
inoremap <expr>  BDG_GetDigraph()
inoremap  :tabnexti
inoremap  :tabnew
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set autoread
set background=dark
set backspace=2
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,default,latin1
set fileformats=unix,dos,mac
set guifont=Consolas:h11
set guioptions=gmrLte
set guitablabel=%M\ %t
set helplang=de
set hlsearch
set incsearch
set laststatus=2
set listchars=tab:Â»Â»,trail:Â·,nbsp:~
set matchtime=2
set ruler
set runtimepath=~/vimfiles,~\\.vim\\bundle\\Vundle.vim,~\\.vim\\bundle\\powerline\\powerline\\bindings\\vim,~\\.vim\\bundle\\tabular,~\\.vim\\bundle\\vim-markdown,~\\.vim\\bundle\\gundo.vim,~\\.vim\\bundle\\vim-repeat,~\\.vim\\bundle\\ultisnips,~\\.vim\\bundle\\vim-snippets,C:\\Program\ Files\ (x86)\\Vim/vimfiles,C:\\Program\ Files\ (x86)\\Vim\\vim74,C:\\Program\ Files\ (x86)\\Vim/vimfiles/after,~/vimfiles/after,~/.vim/bundle/Vundle.vim/,~\\.vim\\bundle\\Vundle.vim/after,~\\.vim\\bundle\\powerline\\powerline\\bindings\\vim/after,~\\.vim\\bundle\\tabular/after,~\\.vim\\bundle\\vim-markdown/after,~\\.vim\\bundle\\gundo.vim/after,~\\.vim\\bundle\\vim-repeat/after,~\\.vim\\bundle\\ultisnips/after,~\\.vim\\bundle\\vim-snippets/after
set showmatch
set smartindent
set splitbelow
set splitright
set statusline=%!pyeval('powerline.new_window()')
set tabline=%!pyeval('powerline.tabline()')
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~\Desktop
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 ~\Desktop\test.txt
badd +1 ~\Desktop
argglobal
silent! argdel *
edit ~\Desktop\test.txt
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=8
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!pyeval('powerline.statusline(1)')
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=8
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 2 - ((1 * winheight(0) + 11) / 23)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 0
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
